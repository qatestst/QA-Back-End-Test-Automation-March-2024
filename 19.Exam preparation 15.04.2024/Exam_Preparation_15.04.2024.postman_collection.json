{
	"info": {
		"_postman_id": "247b5891-e203-4425-aa86-6d835bb1e751",
		"name": "Exam_Preparation_15.04.2024",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28657400",
		"_collection_link": "https://winter-station-924300.postman.co/workspace/SoftUni-QA-Automation-March-202~36c359e5-0cb6-48ac-8c2d-282fdc52172d/collection/28657400-247b5891-e203-4425-aa86-6d835bb1e751?action=share&source=collection_link&creator=28657400"
	},
	"item": [
		{
			"name": "Login and Authenticate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Statrus code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Response body has correct props\", function(){\r",
							"    pm.expect(jsonData).to.have.property(\"username\") \r",
							"    pm.expect(jsonData).to.have.property(\"password\") \r",
							"    pm.expect(jsonData).to.have.property(\"accessToken\") \r",
							"})\r",
							"\r",
							"pm.collectionVariables.set(\"token\", pm.response.json().accessToken);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"userName\": \"test-pesho\", \r\n\"password\": \"123456\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/User/Authentication",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"User",
						"Authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Food",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Statrus code is 201\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"\r",
							"pm.test(\"Response body has food properties\", function(){\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"foodId\") \r",
							"})\r",
							"\r",
							"pm.collectionVariables.set(\"foodId\", pm.response.json().foodId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const foods = ['Pizza', 'Pasta', 'Sushi', \"Cookies\"];\r",
							"const randomFoodIndex = Math.floor(Math.random() * foods.length);\r",
							"const randomFood= foods[randomFoodIndex];\r",
							"\r",
							"const randomSuffix = Math.floor(Math.random() * 1000);\r",
							"const randomName = `${randomFood}${randomSuffix}`;\r",
							"\r",
							"pm.collectionVariables.set(\"randomFood\", randomName);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{randomFood}}\",\r\n  \"description\": \"Some description\",\r\n  \"url\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Food/Create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Food By Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Statrus code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Response should contains food we searched for\", function(){\r",
							"    const jsonData = pm.response.json();\r",
							"    const randomFood = pm.collectionVariables.get(\"randomFood\");\r",
							"    pm.expect(jsonData[0].name).to.eql(randomFood); \r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Food/Search?keyword={{randomFood}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Search"
					],
					"query": [
						{
							"key": "keyword",
							"value": "{{randomFood}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "1.5.\tEdit the Name of the Food that you Created",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Statrus code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Should contain success message\", function(){\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"Successfully edited\"); \r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"path\": \"/name\",\r\n    \"op\": \"replace\",\r\n     \"value\": \"New name\"\r\n  }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Food/Edit/:foodId",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Edit",
						":foodId"
					],
					"variable": [
						{
							"key": "foodId",
							"value": "{{foodId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Edited Food",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Statrus code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Should contain success message\", function(){\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"Deleted successfully!\"); \r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Food/Delete/:foodId",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Delete",
						":foodId"
					],
					"variable": [
						{
							"key": "foodId",
							"value": "{{foodId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://softuni-qa-loadbalancer-2137572849.eu-north-1.elb.amazonaws.com:86",
			"type": "string"
		},
		{
			"key": "randomFood",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "foodId",
			"value": ""
		}
	]
}